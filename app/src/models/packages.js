import breeze from 'breeze';

class PackageConfig {
  constructor(){
    var DT = breeze.DataType;
    var Identity = breeze.AutoGeneratedKeyType.Identity;
    this.initialize = function (metadataStore) {

      // Package information
      metadataStore.addEntityType({
        shortName: "Package",
        namespace: "AureliaDocs",
        dataProperties: {
          id: { dataType: "Int32", isPartOfKey: true },
          name: { dataType: "String" },
          description: { dataType: "String" },
          version: { dataType: "Boolean" }
        },
        navigationProperties: {
          repositories: {
            entityTypeName: "RepositoryDTO", isScalar: false,
            associationName: "Package_RepositoryDTOs"
          },
        }
      });

      metadataStore.addEntityType({
        shortName: "RepositoryDTO",
        namespace: "AureliaDocs",
        dataProperties: {
          id: { dataType: "Int32", isPartOfKey: true },
          name: { dataType: "String" },
          path: { dataType: "String" },
          packageConfigId: { dataType: "Int32" }
        },
        navigationProperties: {
          packageObj: {
            entityTypeName: "Package", isScalar: true,
            associationName: "Package_RepositoryDTOs", foreignKeyNames: ["packageConfigId"]
          }
        }
      });

      metadataStore.registerEntityTypeCtor(
        'Package', null, packageInitializer);
      metadataStore.registerEntityTypeCtor(
        'JspmConfig', null, jspmInitializer);
      metadataStore.registerEntityTypeCtor(
        'RepositoryDTO', null, repoDTOInitializer);

      function packageInitializer(packageObj) {
        packageObj.visible = false;
      }
      function jspmInitializer(jspm) {
        jspm.visible = false;
      }
      function repoDTOInitializer(repo) {
        repo.visible = false;
      }
    }
  }
}

export {
  PackageConfig
}
